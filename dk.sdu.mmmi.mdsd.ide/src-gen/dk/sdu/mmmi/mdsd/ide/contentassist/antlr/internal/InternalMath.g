/*
 * generated by Xtext 2.25.0
 */
grammar InternalMath;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.services.MathGrammarAccess;

}
@parser::members {
	private MathGrammarAccess grammarAccess;

	public void setGrammarAccess(MathGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMath
entryRuleMath
:
{ before(grammarAccess.getMathRule()); }
	 ruleMath
{ after(grammarAccess.getMathRule()); } 
	 EOF 
;

// Rule Math
ruleMath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathAccess().getGroup()); }
		(rule__Math__Group__0)
		{ after(grammarAccess.getMathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternal
entryRuleExternal
:
{ before(grammarAccess.getExternalRule()); }
	 ruleExternal
{ after(grammarAccess.getExternalRule()); } 
	 EOF 
;

// Rule External
ruleExternal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalAccess().getGroup()); }
		(rule__External__Group__0)
		{ after(grammarAccess.getExternalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMathExp
entryRuleMathExp
:
{ before(grammarAccess.getMathExpRule()); }
	 ruleMathExp
{ after(grammarAccess.getMathExpRule()); } 
	 EOF 
;

// Rule MathExp
ruleMathExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMathExpAccess().getGroup()); }
		(rule__MathExp__Group__0)
		{ after(grammarAccess.getMathExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getSubAddExpParserRuleCall()); }
		ruleSubAddExp
		{ after(grammarAccess.getExpAccess().getSubAddExpParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubAddExp
entryRuleSubAddExp
:
{ before(grammarAccess.getSubAddExpRule()); }
	 ruleSubAddExp
{ after(grammarAccess.getSubAddExpRule()); } 
	 EOF 
;

// Rule SubAddExp
ruleSubAddExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubAddExpAccess().getGroup()); }
		(rule__SubAddExp__Group__0)
		{ after(grammarAccess.getSubAddExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivMultExp
entryRuleDivMultExp
:
{ before(grammarAccess.getDivMultExpRule()); }
	 ruleDivMultExp
{ after(grammarAccess.getDivMultExpRule()); } 
	 EOF 
;

// Rule DivMultExp
ruleDivMultExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivMultExpAccess().getGroup()); }
		(rule__DivMultExp__Group__0)
		{ after(grammarAccess.getDivMultExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalUse
entryRuleExternalUse
:
{ before(grammarAccess.getExternalUseRule()); }
	 ruleExternalUse
{ after(grammarAccess.getExternalUseRule()); } 
	 EOF 
;

// Rule ExternalUse
ruleExternalUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalUseAccess().getGroup()); }
		(rule__ExternalUse__Group__0)
		{ after(grammarAccess.getExternalUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableUse
entryRuleVariableUse
:
{ before(grammarAccess.getVariableUseRule()); }
	 ruleVariableUse
{ after(grammarAccess.getVariableUseRule()); } 
	 EOF 
;

// Rule VariableUse
ruleVariableUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableUseAccess().getGroup()); }
		(rule__VariableUse__Group__0)
		{ after(grammarAccess.getVariableUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLet
entryRuleLet
:
{ before(grammarAccess.getLetRule()); }
	 ruleLet
{ after(grammarAccess.getLetRule()); } 
	 EOF 
;

// Rule Let
ruleLet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLetAccess().getGroup()); }
		(rule__Let__Group__0)
		{ after(grammarAccess.getLetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAddExpAccess().getGroup_1_0_0()); }
		(rule__SubAddExp__Group_1_0_0__0)
		{ after(grammarAccess.getSubAddExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubAddExpAccess().getGroup_1_0_1()); }
		(rule__SubAddExp__Group_1_0_1__0)
		{ after(grammarAccess.getSubAddExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivMultExpAccess().getGroup_1_0_0()); }
		(rule__DivMultExp__Group_1_0_0__0)
		{ after(grammarAccess.getDivMultExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDivMultExpAccess().getGroup_1_0_1()); }
		(rule__DivMultExp__Group_1_0_1__0)
		{ after(grammarAccess.getDivMultExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
		ruleParenthesis
		{ after(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
		ruleVariableUse
		{ after(grammarAccess.getPrimaryAccess().getVariableUseParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getLetParserRuleCall_3()); }
		ruleLet
		{ after(grammarAccess.getPrimaryAccess().getLetParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getExternalUseParserRuleCall_4()); }
		ruleExternalUse
		{ after(grammarAccess.getPrimaryAccess().getExternalUseParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math__Group__0__Impl
	rule__Math__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAccess().getProgramKeyword_0()); }
	'program'
	{ after(grammarAccess.getMathAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math__Group__1__Impl
	rule__Math__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAccess().getNameAssignment_1()); }
	(rule__Math__NameAssignment_1)
	{ after(grammarAccess.getMathAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math__Group__2__Impl
	rule__Math__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathAccess().getExternalsAssignment_2()); }
	(rule__Math__ExternalsAssignment_2)*
	{ after(grammarAccess.getMathAccess().getExternalsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Math__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMathAccess().getLinesAssignment_3()); }
		(rule__Math__LinesAssignment_3)
		{ after(grammarAccess.getMathAccess().getLinesAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMathAccess().getLinesAssignment_3()); }
		(rule__Math__LinesAssignment_3)*
		{ after(grammarAccess.getMathAccess().getLinesAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__External__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__0__Impl
	rule__External__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getExternalAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__1__Impl
	rule__External__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getNameAssignment_1()); }
	(rule__External__NameAssignment_1)
	{ after(grammarAccess.getExternalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__2__Impl
	rule__External__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__3__Impl
	rule__External__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getArgsTypeAssignment_3()); }
	(rule__External__ArgsTypeAssignment_3)?
	{ after(grammarAccess.getExternalAccess().getArgsTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__4__Impl
	rule__External__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getGroup_4()); }
	(rule__External__Group_4__0)*
	{ after(grammarAccess.getExternalAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getExternalAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__External__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group_4__0__Impl
	rule__External__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExternalAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__External__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__External__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalAccess().getArgsTypeAssignment_4_1()); }
	(rule__External__ArgsTypeAssignment_4_1)
	{ after(grammarAccess.getExternalAccess().getArgsTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MathExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group__0__Impl
	rule__MathExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getMathExpAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MathExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMathExpAccess().getValueAssignment_1()); }
	(rule__MathExp__ValueAssignment_1)
	{ after(grammarAccess.getMathExpAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getAssignmentAction_0()); }
	()
	{ after(grammarAccess.getAssignmentAccess().getAssignmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getNameAssignment_1()); }
	(rule__Assignment__NameAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getExpAssignment_3()); }
	(rule__Assignment__ExpAssignment_3)
	{ after(grammarAccess.getAssignmentAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubAddExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group__0__Impl
	rule__SubAddExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getDivMultExpParserRuleCall_0()); }
	ruleDivMultExp
	{ after(grammarAccess.getSubAddExpAccess().getDivMultExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getGroup_1()); }
	(rule__SubAddExp__Group_1__0)*
	{ after(grammarAccess.getSubAddExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubAddExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1__0__Impl
	rule__SubAddExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getAlternatives_1_0()); }
	(rule__SubAddExp__Alternatives_1_0)
	{ after(grammarAccess.getSubAddExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getRightAssignment_1_1()); }
	(rule__SubAddExp__RightAssignment_1_1)
	{ after(grammarAccess.getSubAddExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubAddExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1_0_0__0__Impl
	rule__SubAddExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getHyphenMinusKeyword_1_0_0_0()); }
	'-'
	{ after(grammarAccess.getSubAddExpAccess().getHyphenMinusKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getSubtractionLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getSubAddExpAccess().getSubtractionLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubAddExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1_0_1__0__Impl
	rule__SubAddExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getPlusSignKeyword_1_0_1_0()); }
	'+'
	{ after(grammarAccess.getSubAddExpAccess().getPlusSignKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubAddExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAddExpAccess().getAdditionLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getSubAddExpAccess().getAdditionLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DivMultExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group__0__Impl
	rule__DivMultExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getDivMultExpAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getGroup_1()); }
	(rule__DivMultExp__Group_1__0)*
	{ after(grammarAccess.getDivMultExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DivMultExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1__0__Impl
	rule__DivMultExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getAlternatives_1_0()); }
	(rule__DivMultExp__Alternatives_1_0)
	{ after(grammarAccess.getDivMultExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getRightAssignment_1_1()); }
	(rule__DivMultExp__RightAssignment_1_1)
	{ after(grammarAccess.getDivMultExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DivMultExp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1_0_0__0__Impl
	rule__DivMultExp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getSolidusKeyword_1_0_0_0()); }
	'/'
	{ after(grammarAccess.getDivMultExpAccess().getSolidusKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getDivisionLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getDivMultExpAccess().getDivisionLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DivMultExp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1_0_1__0__Impl
	rule__DivMultExp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getAsteriskKeyword_1_0_1_0()); }
	'*'
	{ after(grammarAccess.getDivMultExpAccess().getAsteriskKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivMultExp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivMultExpAccess().getMultiplicationLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getDivMultExpAccess().getMultiplicationLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
	()
	{ after(grammarAccess.getParenthesisAccess().getParenthesisAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
	rule__Parenthesis__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getInnerAssignment_2()); }
	(rule__Parenthesis__InnerAssignment_2)
	{ after(grammarAccess.getParenthesisAccess().getInnerAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__0__Impl
	rule__ExternalUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getExternalUseAction_0()); }
	()
	{ after(grammarAccess.getExternalUseAccess().getExternalUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__1__Impl
	rule__ExternalUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getRefAssignment_1()); }
	(rule__ExternalUse__RefAssignment_1)
	{ after(grammarAccess.getExternalUseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__2__Impl
	rule__ExternalUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalUseAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__3__Impl
	rule__ExternalUse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getParametersAssignment_3()); }
	(rule__ExternalUse__ParametersAssignment_3)?
	{ after(grammarAccess.getExternalUseAccess().getParametersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__4__Impl
	rule__ExternalUse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getGroup_4()); }
	(rule__ExternalUse__Group_4__0)*
	{ after(grammarAccess.getExternalUseAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getExternalUseAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalUse__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group_4__0__Impl
	rule__ExternalUse__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getExternalUseAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalUse__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalUseAccess().getParametersAssignment_4_1()); }
	(rule__ExternalUse__ParametersAssignment_4_1)
	{ after(grammarAccess.getExternalUseAccess().getParametersAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumberAction_0()); }
	()
	{ after(grammarAccess.getNumberAccess().getNumberAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	(rule__Number__ValueAssignment_1)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableUse__Group__0__Impl
	rule__VariableUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableUseAccess().getVarUseAction_0()); }
	()
	{ after(grammarAccess.getVariableUseAccess().getVarUseAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableUse__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableUseAccess().getRefAssignment_1()); }
	(rule__VariableUse__RefAssignment_1)
	{ after(grammarAccess.getVariableUseAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Let__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__0__Impl
	rule__Let__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getLetAction_0()); }
	()
	{ after(grammarAccess.getLetAccess().getLetAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__1__Impl
	rule__Let__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getLetKeyword_1()); }
	'let'
	{ after(grammarAccess.getLetAccess().getLetKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__2__Impl
	rule__Let__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getValueAssignment_2()); }
	(rule__Let__ValueAssignment_2)
	{ after(grammarAccess.getLetAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__3__Impl
	rule__Let__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getInKeyword_3()); }
	'in'
	{ after(grammarAccess.getLetAccess().getInKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__4__Impl
	rule__Let__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getExpAssignment_4()); }
	(rule__Let__ExpAssignment_4)
	{ after(grammarAccess.getLetAccess().getExpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Let__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLetAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getLetAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Math__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMathAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__ExternalsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAccess().getExternalsExternalParserRuleCall_2_0()); }
		ruleExternal
		{ after(grammarAccess.getMathAccess().getExternalsExternalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Math__LinesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathAccess().getLinesMathExpParserRuleCall_3_0()); }
		ruleMathExp
		{ after(grammarAccess.getMathAccess().getLinesMathExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__ArgsTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getArgsTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getArgsTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__External__ArgsTypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalAccess().getArgsTypeIDTerminalRuleCall_4_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalAccess().getArgsTypeIDTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MathExp__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMathExpAccess().getValueAssignmentParserRuleCall_1_0()); }
		ruleAssignment
		{ after(grammarAccess.getMathExpAccess().getValueAssignmentParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAssignmentAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getAssignmentAccess().getExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubAddExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAddExpAccess().getRightDivMultExpParserRuleCall_1_1_0()); }
		ruleDivMultExp
		{ after(grammarAccess.getSubAddExpAccess().getRightDivMultExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivMultExp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivMultExpAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getDivMultExpAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__InnerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParenthesisAccess().getInnerExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getParenthesisAccess().getInnerExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getRefExternalCrossReference_1_0()); }
		(
			{ before(grammarAccess.getExternalUseAccess().getRefExternalIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getExternalUseAccess().getRefExternalIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getExternalUseAccess().getRefExternalCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__ParametersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getParametersExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getExternalUseAccess().getParametersExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalUse__ParametersAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalUseAccess().getParametersExpParserRuleCall_4_1_0()); }
		ruleExp
		{ after(grammarAccess.getExternalUseAccess().getParametersExpParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableUse__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableUseAccess().getRefAssignmentCrossReference_1_0()); }
		(
			{ before(grammarAccess.getVariableUseAccess().getRefAssignmentIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVariableUseAccess().getRefAssignmentIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getVariableUseAccess().getRefAssignmentCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetAccess().getValueAssignmentParserRuleCall_2_0()); }
		ruleAssignment
		{ after(grammarAccess.getLetAccess().getValueAssignmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Let__ExpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLetAccess().getExpExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getLetAccess().getExpExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
