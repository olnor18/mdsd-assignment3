<?xml version="1.0" encoding="UTF-8"?><testrun name="MathParsingTest" project="dk.sdu.mmmi.mdsd.tests" tests="27" started="27" failures="0" errors="1" ignored="0">
  <testsuite name="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.226" displayname="MathParsingTest" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]">
    <testcase name="letNumberExpression" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.111" displayname="letNumberExpression()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letNumberExpression()]"/>
    <testcase name="multipleVariables" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.004" displayname="multipleVariables()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:multipleVariables()]"/>
    <testcase name="subtraction" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.003" displayname="subtraction()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:subtraction()]"/>
    <testcase name="letUseGlobalVariableBindingSameName" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.005" displayname="letUseGlobalVariableBindingSameName()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letUseGlobalVariableBindingSameName()]"/>
    <testcase name="letVariableShadowing" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.005" displayname="letVariableShadowing()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letVariableShadowing()]"/>
    <testcase name="referenceSingleVar" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.004" displayname="referenceSingleVar()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:referenceSingleVar()]"/>
    <testcase name="number" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="number()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:number()]"/>
    <testcase name="letUseGlobalVariableBody" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.006" displayname="letUseGlobalVariableBody()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letUseGlobalVariableBody()]"/>
    <testcase name="threeNumbersAddition" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="threeNumbersAddition()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:threeNumbersAddition()]"/>
    <testcase name="letUseGlobalVariableShadowing" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.004" displayname="letUseGlobalVariableShadowing()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letUseGlobalVariableShadowing()]"/>
    <testcase name="referenceExpressionVar" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.005" displayname="referenceExpressionVar()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:referenceExpressionVar()]"/>
    <testcase name="simpleAddition" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="simpleAddition()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:simpleAddition()]"/>
    <testcase name="precedence" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="precedence()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:precedence()]"/>
    <testcase name="letNumber" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="letNumber()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letNumber()]"/>
    <testcase name="division" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.003" displayname="division()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:division()]"/>
    <testcase name="additionAndSubtraction" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.004" displayname="additionAndSubtraction()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:additionAndSubtraction()]"/>
    <testcase name="multiplicationAndDivision" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="multiplicationAndDivision()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:multiplicationAndDivision()]"/>
    <testcase name="multiplication" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="multiplication()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:multiplication()]"/>
    <testcase name="subtractionNonCommutative" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="subtractionNonCommutative()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:subtractionNonCommutative()]"/>
    <testcase name="threeNumbersMultiplication" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.001" displayname="threeNumbersMultiplication()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:threeNumbersMultiplication()]"/>
    <testcase name="threeNumbersDivision" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="threeNumbersDivision()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:threeNumbersDivision()]"/>
    <testcase name="letUseGlobalVariableBinding" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.005" displayname="letUseGlobalVariableBinding()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:letUseGlobalVariableBinding()]"/>
    <testcase name="parenthesis" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.002" displayname="parenthesis()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:parenthesis()]"/>
    <testcase name="nestedLet" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.024" displayname="nestedLet()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:nestedLet()]">
      <error>java.lang.Exception: The calculation references a variable, that points to null. This is likely a scoping issue
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:128)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:101)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:169)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:93)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:169)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.computeExp(MathGenerator.java:93)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.compute(MathGenerator.java:75)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.lambda$1(MathGenerator.java:64)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at dk.sdu.mmmi.mdsd.generator.MathGenerator.compute(MathGenerator.java:66)
	at dk.sdu.mmmi.mdsd.tests.MathParsingTest.nestedLet(MathParsingTest.java:319)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)
	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)

</error>
    </testcase>
    <testcase name="loadModel" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.0" displayname="loadModel()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:loadModel()]"/>
    <testcase name="threeNumbersSubtraction" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.0" displayname="threeNumbersSubtraction()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:threeNumbersSubtraction()]"/>
    <testcase name="divisionNonCommutative" classname="dk.sdu.mmmi.mdsd.tests.MathParsingTest" time="0.0" displayname="divisionNonCommutative()" uniqueid="[engine:junit-jupiter]/[class:dk.sdu.mmmi.mdsd.tests.MathParsingTest]/[method:divisionNonCommutative()]"/>
  </testsuite>
</testrun>
